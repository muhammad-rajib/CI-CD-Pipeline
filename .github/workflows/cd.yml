name: CD - Build, Push & Deploy

on:
  workflow_run:
    workflows: ["CI - Test & Build"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-demo:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-demo:${{ github.sha }}

      - name: Deploy on EC2 via SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} bash -s << 'EOF'
          set -e

          APP_DIR="/home/ubuntu/app"
          mkdir -p "$APP_DIR"
          cd "$APP_DIR"

          # Overwrite docker-compose.yml dynamically
          cat > docker-compose.yml << 'COMPOSE_EOF'
          version: '3.8'

          services:
            web:
              image: "${1:-REPLACE_WITH_IMAGE}"
              container_name: fastapi_app
              restart: always
              ports:
                - "8000:8000"
              environment:
                ENV: production
          COMPOSE_EOF

          # Overwrite deploy.sh dynamically
          cat > deploy.sh << 'DEPLOY_EOF'
          #!/usr/bin/env bash
          set -e

          APP_DIR="/home/ubuntu/app"
          cd "$APP_DIR"

          DOCKER_IMAGE="$1"
          DOCKERHUB_USERNAME="$2"
          DOCKERHUB_TOKEN="$3"

          : "${DOCKER_IMAGE:?Need to set DOCKER_IMAGE}"

          if [ -n "${DOCKERHUB_USERNAME}" ] && [ -n "${DOCKERHUB_TOKEN}" ]; then
            echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          fi

          docker-compose pull
          docker-compose up -d --remove-orphans
          docker image prune -f
          sudo systemctl reload nginx || true

          echo "âœ… Deployment successful: $DOCKER_IMAGE"
          DEPLOY_EOF

          chmod +x deploy.sh

          # Run deploy.sh with arguments
          ./deploy.sh "${{ secrets.DOCKERHUB_USERNAME }}/fastapi-demo:latest" "${{ secrets.DOCKERHUB_USERNAME }}" "${{ secrets.DOCKERHUB_TOKEN }}"
          EOF
